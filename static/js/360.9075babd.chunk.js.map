{"version":3,"file":"static/js/360.9075babd.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","components/redux/contacts/selectors.js","components/redux/filter/selectors.js","components/ContactsItem/ContactsItem.jsx","components/ContactList/ContactList.jsx","components/CreateContactForm/CreateContactForm.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const InputWrapper = styled.div`\ndisplay: flex;\nmargin-bottom: 20px;`\n\nexport const Label = styled.label`\nwidth: 100%;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 20px;\n`\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 9px 15px;\n  margin-left: 10px;\n  display: inline-block;\n  border: 1px solid #cccccc;\n  box-sizing: border-box;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px;`","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'components/redux/filter/filterSlice';\nimport { InputWrapper, Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInput = e => {\n    const input = e.target.value.trim().toLowerCase();\n    dispatch(filterContacts(input));\n  };\n\n  return (\n    <InputWrapper>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" name=\"filter\" onChange={handleInput} />\n      </Label>\n    </InputWrapper>\n  );\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\nimport { selectFilterState } from \"../filter/selectors\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoadingState = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector([selectFilterState, selectContacts], (filter, contacts) => {\n    if (filter === '') {\n        return contacts;\n    } else {\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(filter)\n        );\n    }\n})","export const selectFilterState = state => state.filter.query;","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'components/redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport { useButton } from 'hooks/useButton';\n\nexport const ContactItem = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n  const removeContact = () => dispatch(deleteContact(id));\n  const buttonArgs = {\n    handleClick: removeContact,\n    label: 'Delete',\n    margin: '0 0 0 10px',\n    size: 'xs',\n  };\n  const button = useButton(buttonArgs);\n\n  return (\n    <li style={{ margin: '0 0 10px 20px ' }}>\n      {name}: {number}\n      {button}\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'components/redux/contacts/selectors';\nimport { ContactItem } from 'components/ContactsItem/ContactsItem';\nimport { SimpleGrid } from '@chakra-ui/react';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <SimpleGrid minChildWidth=\"400px\" spacingX=\"20px\" spacingY=\"10px\">\n      {visibleContacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} />\n      ))}\n    </SimpleGrid>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'components/redux/contacts/selectors';\nimport { addContact } from 'components/redux/contacts/operations';\nimport {\n  Box,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Button,\n} from '@chakra-ui/react';\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\n\nexport const CreateContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const duplicateNameCheck = (array, nameToCheck) => {\n    const nameSameness = array.find(contact => contact.name === nameToCheck);\n\n    return nameSameness ? false : true;\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={Yup.object({\n        name: Yup.string()\n          .required('Required')\n          .test('Unique', 'Name needs te be unique', value => {\n            return duplicateNameCheck(contacts, value);\n          }),\n        number: Yup.string().required('Required'),\n      })}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          dispatch(addContact(values));\n          setSubmitting(false);\n          resetForm();\n        }, 400);\n      }}\n    >\n      {props => (\n        <Box\n          mb={8}\n          border=\"3px solid\"\n          w=\"50%\"\n          p={5}\n          boxShadow=\"8px 8px 3px 2px #767676\"\n        >\n          <Form>\n            <Flex\n              justify={[null, null, null, 'space-between']}\n              wrap={['wrap', 'wrap', 'wrap', 'no-wrap']}\n            >\n              <Field name=\"name\">\n                {({ field, form }) => (\n                  <FormControl\n                    width=\"auto\"\n                    isInvalid={form.errors.name && form.touched.name}\n                  >\n                    <FormLabel mb={2}>Name</FormLabel>\n                    <Input\n                      {...field}\n                      width=\"300px\"\n                      type=\"text\"\n                      focusBorderColor=\"black\"\n                      borderRadius=\"0\"\n                      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    />\n                    <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n              <Field name=\"number\">\n                {({ field, form }) => (\n                  <FormControl\n                    width=\"auto\"\n                    isInvalid={form.errors.number && form.touched.number}\n                  >\n                    <FormLabel mb={2}>Number</FormLabel>\n                    <Input\n                      {...field}\n                      width=\"300px\"\n                      type=\"tel\"\n                      focusBorderColor=\"black\"\n                      borderRadius=\"0\"\n                      pattern=\"/+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\"\n                      title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    />\n                    <FormErrorMessage>{form.errors.number}</FormErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n            </Flex>\n            <Button\n              mt=\"30px\"\n              borderRadius=\"0\"\n              bg=\"transparent\"\n              size=\"sm\"\n              border=\"1px solid #000000\"\n              _hover={{ bg: '#606060', color: 'white' }}\n              _active={{\n                bg: '#000000',\n                transform: 'scale(0.98)',\n              }}\n              disabled={!props.isValid}\n              isLoading={props.isSubmitting}\n              type=\"submit\"\n            >\n              Add Contact\n            </Button>\n          </Form>\n        </Box>\n      )}\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { CreateContactForm } from 'components/CreateContactForm/CreateContactForm';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@chakra-ui/react';\nimport { fetchAll } from 'components/redux/contacts/operations';\nimport { selectLoadingState } from 'components/redux/contacts/selectors';\nimport { Loader } from 'components/loader';\n\nexport default function Contacts() {\n  const showloader = useSelector(selectLoadingState);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAll());\n  }, [dispatch]);\n\n  return (\n    <Box w=\"100%\" p={4}>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <CreateContactForm />\n      <Filter />\n      {showloader ? <Loader /> : <ContactList />}\n    </Box>\n  );\n}\n"],"names":["InputWrapper","styled","Label","Input","Filter","dispatch","useDispatch","type","name","onChange","e","input","target","value","trim","toLowerCase","filterContacts","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectLoadingState","isLoading","selectVisibleContacts","filter","query","includes","ContactItem","contact","number","id","buttonArgs","handleClick","deleteContact","label","margin","size","button","useButton","style","ContactList","visibleContacts","useSelector","minChildWidth","spacingX","spacingY","CreateContactForm","initialValues","validationSchema","Yup","required","test","nameToCheck","onSubmit","values","setSubmitting","resetForm","setTimeout","addContact","props","mb","border","w","p","boxShadow","justify","wrap","field","form","width","isInvalid","errors","touched","focusBorderColor","borderRadius","pattern","title","mt","bg","_hover","color","_active","transform","disabled","isValid","isSubmitting","Contacts","showloader","useEffect","fetchAll"],"sourceRoot":""}